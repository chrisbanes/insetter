name: CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'

jobs:
  build:
    # Skip build if head commit contains 'skip ci'
    if: "!contains(github.event.head_commit.message, 'skip ci')"

    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      TERM: dumb

    steps:
      - uses: actions/checkout@v2

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Decrypt secrets
        run: release/signing-setup.sh $ENCRYPT_KEY
        env:
          ENCRYPT_KEY: ${{ secrets.ENCRYPT_KEY }}

      - uses: burrunan/gradle-cache-action@v1
        name: Build
        with:
          job-id: linux
          gradle-dependencies-cache-key: |
            buildSrc/src/main/java/dev/chrisbanes/insetter/buildsrc/dependencies.kt
          arguments: |
            spotlessCheck
            apiCheck
            assemble
            lintDebug

      - name: Clean secrets
        if: always()
        run: release/signing-cleanup.sh

  test:
    runs-on: macOS-latest
    timeout-minutes: 30
    needs: build
    strategy:
      matrix:
        api-level: [ 21, 23, 26, 29 ]
    env:
      TERM: dumb

    steps:
      - uses: actions/checkout@v2

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Decrypt secrets
        run: release/signing-setup.sh $ENCRYPT_KEY
        env:
          ENCRYPT_KEY: ${{ secrets.ENCRYPT_KEY }}

      - uses: burrunan/gradle-cache-action@v1
        with:
          job-id: mac
          gradle-dependencies-cache-key: |
            buildSrc/src/main/java/dev/chrisbanes/insetter/buildsrc/dependencies.kt

      # Determine what emulator image to use. We run all API 29+ emulators using
      # the google_apis image
      - name: Determine emulator target
        id: determine-target
        env:
          API_LEVEL: ${{ matrix.api-level }}
        run: |
          TARGET="default"
          if [ "$API_LEVEL" -ge "29" ]; then
            TARGET="google_apis"
          fi
          echo "::set-output name=TARGET::$TARGET"

      - name: Run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ steps.determine-target.outputs.TARGET }}
          profile: Galaxy Nexus
          script: ./gradlew connectedCheck

      - name: Clean secrets
        if: always()
        run: release/signing-cleanup.sh

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-results-${{ matrix.api-level }}-${{ steps.determine-target.outputs.TARGET }}
          path: |
            **/build/reports/*
            **/build/outputs/*/connected/*

  deploy:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: [build, test]
    env:
      TERM: dumb

    steps:
      - uses: actions/checkout@v2

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Decrypt secrets
        run: release/signing-setup.sh $ENCRYPT_KEY
        env:
          ENCRYPT_KEY: ${{ secrets.ENCRYPT_KEY }}

      - uses: burrunan/gradle-cache-action@v1
        name: Publish
        with:
          job-id: linux
          gradle-dependencies-cache-key: |
            buildSrc/src/main/java/dev/chrisbanes/insetter/buildsrc/dependencies.kt
          arguments: publish --no-parallel
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONATYPE_NEXUS_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_NEXUS_PASSWORD }}

      - name: Clean secrets
        if: always()
        run: release/signing-cleanup.sh
